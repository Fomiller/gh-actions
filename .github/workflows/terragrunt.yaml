on:
  workflow_call:
    inputs:
      environment:
        required: false
        type: string
          
      doppler-project:
        required: true
        type: string
      
      tg-version:
        required: false
        type: string
        default: 0.42.8
            
      tf-version:
        required: false
        type: string
        default: latest
            
      infra-dir:
        required: false
        type: string
        default: infra
            
      aws-default-region:
        required: false
        type: string
        default: us-east-1
      
      aws-default-output:
        required: false
        type: string
        default: json
      
          
    secrets:
      # aws-access-key-id:
      #   required: true
      # aws-secret-access-key:
      #   required: true
      # aws-account-id:
      #   required: true
      # aws-deployer-role:
      #   required: true
      gmail_pass:
        required: false

jobs:
  Pre-check:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@v5
        with:
          cancel_others: 'true'
          concurrent_skipping: 'same_content_newer'

  Deploy-aws-infra:
    needs: Pre-check
    if: ${{ (github.event.pull_request.merged == true || github.event_name == 'push') && needs.pre-check.outputs.should_skip != 'true' }}
    name: 'Deploy AWS Infra'
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2
          
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ secrets.AWS_DEPLOYER_ROLE }}
        aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
        role-duration-seconds: 1200

    - name: Install Terraform ${{ inputs.tf-version }}
      uses: hashicorp/setup-Terraform@v1
      with:
        terraform_version: ${{ inputs.tf-version }}
        terraform_wrapper: false
    
    - name: Install Terragrunt ${{ inputs.tg-version }}
      run: |
        sudo wget -q -O /bin/terragrunt "https://github.com/gruntwork-io/terragrunt/releases/download/v${{ inputs.tg-version }}/terragrunt_linux_amd64"
        sudo chmod +x /bin/terragrunt
        
    - name: Install Just
      uses: extractions/setup-just@v1
        
    - name: Install Doppler
      uses: dopplerhq/cli-action@v2
      
    - name: Doppler Setup
      run: doppler -p ${{inputs.doppler-project}} -c ${{inputs.environment}}
      env:
          DOPPLER_TOKEN: ${{ secrets.DOPPLER_TOKEN }}

    - name: Terragrunt Apply
      continue-on-error: false
      run: |
        just apply-all
        
    # use if you need to debug workflow
    # - name: DEBUG
    #   uses: lhotari/action-upterm@v1
    #   with:
    #      limit-access-to-actor: true
    #      limit-access-to-users: Fomiller
          
